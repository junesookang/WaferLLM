param P: i16;
param bsz: i16;
param dim_p_pe: i16;
// param pes_p_head: i16;
// param pes_p_kv_head: i16;
// param head_dim_p_pe: i16;
param seq_len_p_pe: i16;
param ffn_dim_p_pe: i16;

param pe_num_p_group: i16;
param root_1st_phase: i16;
param root_2nd_phase: i16;

param X_1st_RD_0: comptime_struct;
param X_1st_RD_1: comptime_struct;
param Y_1st_RD_0: comptime_struct;
param Y_1st_RD_1: comptime_struct;

param X_2nd_RD_0: comptime_struct;
param X_2nd_RD_1: comptime_struct;
param Y_2nd_RD_0: comptime_struct;
param Y_2nd_RD_1: comptime_struct;

param X_BD: comptime_struct;
param Y_BD: comptime_struct;

param reduce_1st_color_0: color;
param reduce_1st_color_1: color;

param reduce_2nd_color_0: color;
param reduce_2nd_color_1: color;

param broadcast_color: color;

const trace = @import_module(
  "<debug>",
  .{ .key = "debug_comm",
     .buffer_size = 100,
   }
);
const simprint = @import_module("<simprint>");

const reduce_1st_0_recv_queue_id = @get_input_queue(3);
const reduce_1st_0_send_queue_id = @get_output_queue(3);
const reduce_1st_1_recv_queue_id = @get_input_queue(4);
const reduce_1st_1_send_queue_id = @get_output_queue(4);

const reduce_2nd_0_recv_queue_id = @get_input_queue(5);
const reduce_2nd_0_send_queue_id = @get_output_queue(5);
const reduce_2nd_1_recv_queue_id = @get_input_queue(6);
const reduce_2nd_1_send_queue_id = @get_output_queue(6);

const broadcast_recv_queue_id = @get_input_queue(7);
const broadcast_send_queue_id = @get_output_queue(7);

const ctrl = @import_module("<control>");
const tile_config = @import_module("<tile_config>");
const color_config = tile_config.color_config;

const dummy = @zeros([1]f16);

// *************************** RMSNorm bsz ***************************//

const reduce_1st_0_send_bsz = @get_dsd(fabout_dsd, .{
    .extent = bsz,
    .fabric_color = reduce_1st_color_0,
    .output_queue = reduce_1st_0_send_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_1st_0_recv_bsz = @get_dsd(fabin_dsd, .{
    .extent = bsz,
    .fabric_color = reduce_1st_color_0,
    .input_queue = reduce_1st_0_recv_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_1st_1_send_bsz = @get_dsd(fabout_dsd, .{
    .extent = bsz,
    .fabric_color = reduce_1st_color_1,
    .output_queue = reduce_1st_1_send_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_1st_1_recv_bsz = @get_dsd(fabin_dsd, .{
    .extent = bsz,
    .fabric_color = reduce_1st_color_1,
    .input_queue = reduce_1st_1_recv_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_2nd_0_send_bsz = @get_dsd(fabout_dsd, .{
    .extent = bsz,
    .fabric_color = reduce_2nd_color_0,
    .output_queue = reduce_2nd_0_send_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_2nd_0_recv_bsz = @get_dsd(fabin_dsd, .{
    .extent = bsz,
    .fabric_color = reduce_2nd_color_0,
    .input_queue = reduce_2nd_0_recv_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_2nd_1_send_bsz = @get_dsd(fabout_dsd, .{
    .extent = bsz,
    .fabric_color = reduce_2nd_color_1,
    .output_queue = reduce_2nd_1_send_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_2nd_1_recv_bsz = @get_dsd(fabin_dsd, .{
    .extent = bsz,
    .fabric_color = reduce_2nd_color_1,
    .input_queue = reduce_2nd_1_recv_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});


const bdcast_send_bsz = @get_dsd(fabout_dsd, .{
    .extent = bsz,
    .fabric_color = broadcast_color,
    .output_queue = broadcast_send_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const bdcast_recv_bsz = @get_dsd(fabin_dsd, .{
    .extent = bsz,
    .fabric_color = broadcast_color,
    .input_queue = broadcast_recv_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

// *************************** bsz * dim_p_pe ***************************//
const reduce_1st_0_send_bsz_dim = @get_dsd(fabout_dsd, .{
    .extent = bsz * dim_p_pe,
    .fabric_color = reduce_1st_color_0,
    .output_queue = reduce_1st_0_send_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_1st_0_recv_bsz_dim = @get_dsd(fabin_dsd, .{
    .extent = bsz * dim_p_pe,
    .fabric_color = reduce_1st_color_0,
    .input_queue = reduce_1st_0_recv_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_1st_1_send_bsz_dim = @get_dsd(fabout_dsd, .{
    .extent = bsz * dim_p_pe,
    .fabric_color = reduce_1st_color_1,
    .output_queue = reduce_1st_1_send_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_1st_1_recv_bsz_dim = @get_dsd(fabin_dsd, .{
    .extent = bsz * dim_p_pe,
    .fabric_color = reduce_1st_color_1,
    .input_queue = reduce_1st_1_recv_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_2nd_0_send_bsz_dim = @get_dsd(fabout_dsd, .{
    .extent = bsz * dim_p_pe,
    .fabric_color = reduce_2nd_color_0,
    .output_queue = reduce_2nd_0_send_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_2nd_0_recv_bsz_dim = @get_dsd(fabin_dsd, .{
    .extent = bsz * dim_p_pe,
    .fabric_color = reduce_2nd_color_0,
    .input_queue = reduce_2nd_0_recv_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_2nd_1_send_bsz_dim = @get_dsd(fabout_dsd, .{
    .extent = bsz * dim_p_pe,
    .fabric_color = reduce_2nd_color_1,
    .output_queue = reduce_2nd_1_send_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_2nd_1_recv_bsz_dim = @get_dsd(fabin_dsd, .{
    .extent = bsz * dim_p_pe,
    .fabric_color = reduce_2nd_color_1,
    .input_queue = reduce_2nd_1_recv_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});


const bdcast_send_bsz_dim = @get_dsd(fabout_dsd, .{
    .extent = bsz * dim_p_pe,
    .fabric_color = broadcast_color,
    .output_queue = broadcast_send_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const bdcast_recv_bsz_dim = @get_dsd(fabin_dsd, .{
    .extent = bsz * dim_p_pe,
    .fabric_color = broadcast_color,
    .input_queue = broadcast_recv_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

// *************************** bsz * 3 * dim_p_pe ***************************//
const reduce_1st_0_send_bsz_dim_QKV_fusion = @get_dsd(fabout_dsd, .{
    .extent = bsz * 3 * dim_p_pe,
    .fabric_color = reduce_1st_color_0,
    .output_queue = reduce_1st_0_send_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_1st_0_recv_bsz_dim_QKV_fusion = @get_dsd(fabin_dsd, .{
    .extent = bsz * 3 * dim_p_pe,
    .fabric_color = reduce_1st_color_0,
    .input_queue = reduce_1st_0_recv_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_1st_1_send_bsz_dim_QKV_fusion = @get_dsd(fabout_dsd, .{
    .extent = bsz * 3 * dim_p_pe,
    .fabric_color = reduce_1st_color_1,
    .output_queue = reduce_1st_1_send_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_1st_1_recv_bsz_dim_QKV_fusion = @get_dsd(fabin_dsd, .{
    .extent = bsz * 3 * dim_p_pe,
    .fabric_color = reduce_1st_color_1,
    .input_queue = reduce_1st_1_recv_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_2nd_0_send_bsz_dim_QKV_fusion = @get_dsd(fabout_dsd, .{
    .extent = bsz * 3 * dim_p_pe,
    .fabric_color = reduce_2nd_color_0,
    .output_queue = reduce_2nd_0_send_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_2nd_0_recv_bsz_dim_QKV_fusion = @get_dsd(fabin_dsd, .{
    .extent = bsz * 3 * dim_p_pe,
    .fabric_color = reduce_2nd_color_0,
    .input_queue = reduce_2nd_0_recv_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_2nd_1_send_bsz_dim_QKV_fusion = @get_dsd(fabout_dsd, .{
    .extent = bsz * 3 * dim_p_pe,
    .fabric_color = reduce_2nd_color_1,
    .output_queue = reduce_2nd_1_send_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_2nd_1_recv_bsz_dim_QKV_fusion = @get_dsd(fabin_dsd, .{
    .extent = bsz * 3 * dim_p_pe,
    .fabric_color = reduce_2nd_color_1,
    .input_queue = reduce_2nd_1_recv_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});


const bdcast_send_bsz_dim_QKV_fusion = @get_dsd(fabout_dsd, .{
    .extent = bsz * 3 * dim_p_pe,
    .fabric_color = broadcast_color,
    .output_queue = broadcast_send_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const bdcast_recv_bsz_dim_QKV_fusion = @get_dsd(fabin_dsd, .{
    .extent = bsz * 3 * dim_p_pe,
    .fabric_color = broadcast_color,
    .input_queue = broadcast_recv_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

// ************************* bsz * seq_len_p_pe *************************//
const reduce_1st_0_send_bsz_seq_len = @get_dsd(fabout_dsd, .{
    .extent = bsz * seq_len_p_pe,
    .fabric_color = reduce_1st_color_0,
    .output_queue = reduce_1st_0_send_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_1st_0_recv_bsz_seq_len = @get_dsd(fabin_dsd, .{
    .extent = bsz * seq_len_p_pe,
    .fabric_color = reduce_1st_color_0,
    .input_queue = reduce_1st_0_recv_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_1st_1_send_bsz_seq_len = @get_dsd(fabout_dsd, .{
    .extent = bsz * seq_len_p_pe,
    .fabric_color = reduce_1st_color_1,
    .output_queue = reduce_1st_1_send_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_1st_1_recv_bsz_seq_len = @get_dsd(fabin_dsd, .{
    .extent = bsz * seq_len_p_pe,
    .fabric_color = reduce_1st_color_1,
    .input_queue = reduce_1st_1_recv_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_2nd_0_send_bsz_seq_len = @get_dsd(fabout_dsd, .{
    .extent = bsz * seq_len_p_pe,
    .fabric_color = reduce_2nd_color_0,
    .output_queue = reduce_2nd_0_send_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_2nd_0_recv_bsz_seq_len = @get_dsd(fabin_dsd, .{
    .extent = bsz * seq_len_p_pe,
    .fabric_color = reduce_2nd_color_0,
    .input_queue = reduce_2nd_0_recv_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_2nd_1_send_bsz_seq_len = @get_dsd(fabout_dsd, .{
    .extent = bsz * seq_len_p_pe,
    .fabric_color = reduce_2nd_color_1,
    .output_queue = reduce_2nd_1_send_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_2nd_1_recv_bsz_seq_len = @get_dsd(fabin_dsd, .{
    .extent = bsz * seq_len_p_pe,
    .fabric_color = reduce_2nd_color_1,
    .input_queue = reduce_2nd_1_recv_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});


const bdcast_send_bsz_seq_len = @get_dsd(fabout_dsd, .{
    .extent = bsz * seq_len_p_pe,
    .fabric_color = broadcast_color,
    .output_queue = broadcast_send_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

const bdcast_recv_bsz_seq_len = @get_dsd(fabin_dsd, .{
    .extent = bsz * seq_len_p_pe,
    .fabric_color = broadcast_color,
    .input_queue = broadcast_recv_queue_id,
    // .simd_mode = .{ .simd_32 = true },
    .simd_mode = .{ .simd_64 = true },
});

// ************************* bsz * 2 * ffn_dim_p_pe *************************//

const reduce_1st_0_send_bsz_ffn_dim_ZZ_fusion = @get_dsd(fabout_dsd, .{
    .extent = bsz * 2 * ffn_dim_p_pe,
    .fabric_color = reduce_1st_color_0,
    .output_queue = reduce_1st_0_send_queue_id,
    // .simd_mode = .{ .simd_32_or_64 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_1st_0_recv_bsz_ffn_dim_ZZ_fusion = @get_dsd(fabin_dsd, .{
    .extent = bsz * 2 * ffn_dim_p_pe,
    .fabric_color = reduce_1st_color_0,
    .input_queue = reduce_1st_0_recv_queue_id,
    // .simd_mode = .{ .simd_32_or_64 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_1st_1_send_bsz_ffn_dim_ZZ_fusion = @get_dsd(fabout_dsd, .{
    .extent = bsz * 2 * ffn_dim_p_pe,
    .fabric_color = reduce_1st_color_1,
    .output_queue = reduce_1st_1_send_queue_id,
    // .simd_mode = .{ .simd_32_or_64 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_1st_1_recv_bsz_ffn_dim_ZZ_fusion = @get_dsd(fabin_dsd, .{
    .extent = bsz * 2 * ffn_dim_p_pe,
    .fabric_color = reduce_1st_color_1,
    .input_queue = reduce_1st_1_recv_queue_id,
    // .simd_mode = .{ .simd_32_or_64 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_2nd_0_send_bsz_ffn_dim_ZZ_fusion = @get_dsd(fabout_dsd, .{
    .extent = bsz * 2 * ffn_dim_p_pe,
    .fabric_color = reduce_2nd_color_0,
    .output_queue = reduce_2nd_0_send_queue_id,
    // .simd_mode = .{ .simd_32_or_64 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_2nd_0_recv_bsz_ffn_dim_ZZ_fusion = @get_dsd(fabin_dsd, .{
    .extent = bsz * 2 * ffn_dim_p_pe,
    .fabric_color = reduce_2nd_color_0,
    .input_queue = reduce_2nd_0_recv_queue_id,
    // .simd_mode = .{ .simd_32_or_64 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_2nd_1_send_bsz_ffn_dim_ZZ_fusion = @get_dsd(fabout_dsd, .{
    .extent = bsz * 2 * ffn_dim_p_pe,
    .fabric_color = reduce_2nd_color_1,
    .output_queue = reduce_2nd_1_send_queue_id,
    // .simd_mode = .{ .simd_32_or_64 = true },
    .simd_mode = .{ .simd_64 = true },
});

const reduce_2nd_1_recv_bsz_ffn_dim_ZZ_fusion = @get_dsd(fabin_dsd, .{
    .extent = bsz * 2 * ffn_dim_p_pe,
    .fabric_color = reduce_2nd_color_1,
    .input_queue = reduce_2nd_1_recv_queue_id,
    // .simd_mode = .{ .simd_32_or_64 = true },
    .simd_mode = .{ .simd_64 = true },
});


const bdcast_send_bsz_ffn_dim_ZZ_fusion = @get_dsd(fabout_dsd, .{
    .extent = bsz * 2 * ffn_dim_p_pe,
    .fabric_color = broadcast_color,
    .output_queue = broadcast_send_queue_id,
    // .simd_mode = .{ .simd_32_or_64 = true },
    .simd_mode = .{ .simd_64 = true },
});

const bdcast_recv_bsz_ffn_dim_ZZ_fusion = @get_dsd(fabin_dsd, .{
    .extent = bsz * 2 * ffn_dim_p_pe,
    .fabric_color = broadcast_color,
    .input_queue = broadcast_recv_queue_id,
    // .simd_mode = .{ .simd_32_or_64 = true },
    .simd_mode = .{ .simd_64 = true },
});

var vector_buf_dsd_bsz = @get_dsd(mem1d_dsd, .{ .base_address = &dummy, .extent = bsz });
var vector_buf_dsd_bsz_dim = @get_dsd(mem1d_dsd, .{ .base_address = &dummy, .extent = bsz * dim_p_pe });
var vector_buf_dsd_bsz_dim_QKV_fusion = @get_dsd(mem1d_dsd, .{ .base_address = &dummy, .extent = bsz * 3 * dim_p_pe });
var vector_buf_dsd_bsz_seq_len = @get_dsd(mem1d_dsd, .{ .base_address = &dummy, .extent = bsz * seq_len_p_pe });
var vector_buf_dsd_bsz_ffn_dim_ZZ_fusion = @get_dsd(mem1d_dsd, .{ .base_address = &dummy, .extent = bsz * 2 * ffn_dim_p_pe });
const vector_buf_dsr = @get_dsr(dsr_src1, 2);

fn init() void {
    color_config.reset_routes(reduce_1st_color_0, Y_1st_RD_0);
    color_config.reset_routes(reduce_1st_color_1, Y_1st_RD_1);

    color_config.reset_routes(reduce_2nd_color_0, Y_2nd_RD_0);
    color_config.reset_routes(reduce_2nd_color_1, Y_2nd_RD_1);

    color_config.reset_routes(broadcast_color, Y_BD);
}

fn all_reduce_bsz(pe_id: i16, quotient_pe_id: i16, remainder_pe_id: i16, vector_buf_ptr: [*]f16) void {
    vector_buf_dsd_bsz = @set_dsd_base_addr(vector_buf_dsd_bsz, vector_buf_ptr);
    @load_to_dsr(vector_buf_dsr, vector_buf_dsd_bsz);

    // 1st phase reduce
    if (remainder_pe_id == root_1st_phase) {
        if (root_1st_phase < pe_num_p_group - 1) {
            @faddh(vector_buf_dsd_bsz, reduce_1st_0_recv_bsz, vector_buf_dsr);
        }
        @faddh(vector_buf_dsd_bsz, reduce_1st_1_recv_bsz, vector_buf_dsr);
    } else if (remainder_pe_id > root_1st_phase) {
        if (remainder_pe_id % 2 == 0) {
            if (remainder_pe_id == pe_num_p_group - 1) {
                @fmovh(reduce_1st_0_send_bsz, vector_buf_dsr);
            } else {
                @faddh(reduce_1st_0_send_bsz, reduce_1st_1_recv_bsz, vector_buf_dsr);
            }
        } else {
            // remainder_pe_id % 2 == 1
            if (remainder_pe_id == pe_num_p_group - 1) {
                @fmovh(reduce_1st_1_send_bsz, vector_buf_dsr);
            } else {
                @faddh(reduce_1st_1_send_bsz, reduce_1st_0_recv_bsz, vector_buf_dsr);
            }
        }
    } else {
        // remainder_pe_id < root_1st_phase
        if (remainder_pe_id % 2 == 0) {
            if (remainder_pe_id == 0) {
                @fmovh(reduce_1st_1_send_bsz, vector_buf_dsr);
            } else {
                @faddh(reduce_1st_1_send_bsz, reduce_1st_0_recv_bsz, vector_buf_dsr);
            }
        } else {
            // remainder_pe_id never be 0
            @faddh(reduce_1st_0_send_bsz, reduce_1st_1_recv_bsz, vector_buf_dsr);
        }
    }

    // 2nd phase reduce
    if (pe_id == root_2nd_phase) {
        if (root_2nd_phase < P - pe_num_p_group) {
            @faddh(vector_buf_dsd_bsz, reduce_2nd_0_recv_bsz, vector_buf_dsr);
        }
        @faddh(vector_buf_dsd_bsz, reduce_2nd_1_recv_bsz, vector_buf_dsr);
    } else if (pe_id > root_2nd_phase) {
        if (remainder_pe_id == root_1st_phase) {
            if (pe_id > P - pe_num_p_group - 1) {
                if (quotient_pe_id % 2 == 0) {
                    @fmovh(reduce_2nd_0_send_bsz, vector_buf_dsr);
                } else {
                    @fmovh(reduce_2nd_1_send_bsz, vector_buf_dsr);
                }
            } else {
                if (quotient_pe_id % 2 == 0) {
                    @faddh(reduce_2nd_0_send_bsz, reduce_2nd_1_recv_bsz, vector_buf_dsr);
                } else {
                    @faddh(reduce_2nd_1_send_bsz, reduce_2nd_0_recv_bsz, vector_buf_dsr);
                }
            }
        }
    } else {
        if (remainder_pe_id == root_1st_phase) {
            if (pe_id < pe_num_p_group) {
                @fmovh(reduce_2nd_1_send_bsz, vector_buf_dsr);
            } else {
                if (quotient_pe_id % 2 == 0) {
                    @faddh(reduce_2nd_1_send_bsz, reduce_2nd_0_recv_bsz, vector_buf_dsr);
                } else {
                    @faddh(reduce_2nd_0_send_bsz, reduce_2nd_1_recv_bsz, vector_buf_dsr);
                }
            }
        }
    }

    // Broadcast
    if (pe_id == root_2nd_phase) {
        @mov16(bdcast_send_bsz, vector_buf_dsr);
    } else {
        @mov16(vector_buf_dsd_bsz, bdcast_recv_bsz);
    }
}

fn all_reduceMax_bsz(pe_id: i16, quotient_pe_id: i16, remainder_pe_id: i16, vector_buf_ptr: [*]f16) void {
    vector_buf_dsd_bsz = @set_dsd_base_addr(vector_buf_dsd_bsz, vector_buf_ptr);
    @load_to_dsr(vector_buf_dsr, vector_buf_dsd_bsz);

    // 1st phase reduce
    if (remainder_pe_id == root_1st_phase) {
        if (root_1st_phase < pe_num_p_group - 1) {
            @fmaxh(vector_buf_dsd_bsz, reduce_1st_0_recv_bsz, vector_buf_dsr);
        }
        @fmaxh(vector_buf_dsd_bsz, reduce_1st_1_recv_bsz, vector_buf_dsr);
    } else if (remainder_pe_id > root_1st_phase) {
        if (remainder_pe_id % 2 == 0) {
            if (remainder_pe_id == pe_num_p_group - 1) {
                @fmovh(reduce_1st_0_send_bsz, vector_buf_dsr);
            } else {
                @fmaxh(reduce_1st_0_send_bsz, reduce_1st_1_recv_bsz, vector_buf_dsr);
            }
        } else {
            // remainder_pe_id % 2 == 1
            if (remainder_pe_id == pe_num_p_group - 1) {
                @fmovh(reduce_1st_1_send_bsz, vector_buf_dsr);
            } else {
                @fmaxh(reduce_1st_1_send_bsz, reduce_1st_0_recv_bsz, vector_buf_dsr);
            }
        }
    } else {
        // remainder_pe_id < root_1st_phase
        if (remainder_pe_id % 2 == 0) {
            if (remainder_pe_id == 0) {
                @fmovh(reduce_1st_1_send_bsz, vector_buf_dsr);
            } else {
                @fmaxh(reduce_1st_1_send_bsz, reduce_1st_0_recv_bsz, vector_buf_dsr);
            }
        } else {
            // remainder_pe_id never be 0
            @fmaxh(reduce_1st_0_send_bsz, reduce_1st_1_recv_bsz, vector_buf_dsr);
        }
    }

    // 2nd phase reduce
    if (pe_id == root_2nd_phase) {
        if (root_2nd_phase < P - pe_num_p_group) {
            @fmaxh(vector_buf_dsd_bsz, reduce_2nd_0_recv_bsz, vector_buf_dsr);
        }
        @fmaxh(vector_buf_dsd_bsz, reduce_2nd_1_recv_bsz, vector_buf_dsr);
    } else if (pe_id > root_2nd_phase) {
        if (remainder_pe_id == root_1st_phase) {
            if (pe_id > P - pe_num_p_group - 1) {
                if (quotient_pe_id % 2 == 0) {
                    @fmovh(reduce_2nd_0_send_bsz, vector_buf_dsr);
                } else {
                    @fmovh(reduce_2nd_1_send_bsz, vector_buf_dsr);
                }
            } else {
                if (quotient_pe_id % 2 == 0) {
                    @fmaxh(reduce_2nd_0_send_bsz, reduce_2nd_1_recv_bsz, vector_buf_dsr);
                } else {
                    @fmaxh(reduce_2nd_1_send_bsz, reduce_2nd_0_recv_bsz, vector_buf_dsr);
                }
            }
        }
    } else {
        if (remainder_pe_id == root_1st_phase) {
            if (pe_id < pe_num_p_group) {
                @fmovh(reduce_2nd_1_send_bsz, vector_buf_dsr);
            } else {
                if (quotient_pe_id % 2 == 0) {
                    @fmaxh(reduce_2nd_1_send_bsz, reduce_2nd_0_recv_bsz, vector_buf_dsr);
                } else {
                    @fmaxh(reduce_2nd_0_send_bsz, reduce_2nd_1_recv_bsz, vector_buf_dsr);
                }
            }
        }
    }

    // Broadcast
    if (pe_id == root_2nd_phase) {
        @mov16(bdcast_send_bsz, vector_buf_dsr);
    } else {
        @mov16(vector_buf_dsd_bsz, bdcast_recv_bsz);
    }
}

fn all_reduce_bsz_dim(pe_id: i16, quotient_pe_id: i16, remainder_pe_id: i16, vector_buf_ptr: [*]f16) void {
    vector_buf_dsd_bsz_dim = @set_dsd_base_addr(vector_buf_dsd_bsz_dim, vector_buf_ptr);
    @load_to_dsr(vector_buf_dsr, vector_buf_dsd_bsz_dim);

    // 1st phase reduce
    if (remainder_pe_id == root_1st_phase) {
        if (root_1st_phase < pe_num_p_group - 1) {
            @faddh(vector_buf_dsd_bsz_dim, reduce_1st_0_recv_bsz_dim, vector_buf_dsr);
        }
        @faddh(vector_buf_dsd_bsz_dim, reduce_1st_1_recv_bsz_dim, vector_buf_dsr);
    } else if (remainder_pe_id > root_1st_phase) {
        if (remainder_pe_id % 2 == 0) {
            if (remainder_pe_id == pe_num_p_group - 1) {
                @fmovh(reduce_1st_0_send_bsz_dim, vector_buf_dsr);
            } else {
                @faddh(reduce_1st_0_send_bsz_dim, reduce_1st_1_recv_bsz_dim, vector_buf_dsr);
            }
        } else {
            // remainder_pe_id % 2 == 1
            if (remainder_pe_id == pe_num_p_group - 1) {
                @fmovh(reduce_1st_1_send_bsz_dim, vector_buf_dsr);
            } else {
                @faddh(reduce_1st_1_send_bsz_dim, reduce_1st_0_recv_bsz_dim, vector_buf_dsr);
            }
        }
    } else {
        // remainder_pe_id < root_1st_phase
        if (remainder_pe_id % 2 == 0) {
            if (remainder_pe_id == 0) {
                @fmovh(reduce_1st_1_send_bsz_dim, vector_buf_dsr);
            } else {
                @faddh(reduce_1st_1_send_bsz_dim, reduce_1st_0_recv_bsz_dim, vector_buf_dsr);
            }
        } else {
            // remainder_pe_id never be 0
            @faddh(reduce_1st_0_send_bsz_dim, reduce_1st_1_recv_bsz_dim, vector_buf_dsr);
        }
    }

    // 2nd phase reduce
    if (pe_id == root_2nd_phase) {
        if (root_2nd_phase < P - pe_num_p_group) {
            @faddh(vector_buf_dsd_bsz_dim, reduce_2nd_0_recv_bsz_dim, vector_buf_dsr);
        }
        @faddh(vector_buf_dsd_bsz_dim, reduce_2nd_1_recv_bsz_dim, vector_buf_dsr);
    } else if (pe_id > root_2nd_phase) {
        if (remainder_pe_id == root_1st_phase) {
            if (pe_id > P - pe_num_p_group - 1) {
                if (quotient_pe_id % 2 == 0) {
                    @fmovh(reduce_2nd_0_send_bsz_dim, vector_buf_dsr);
                } else {
                    @fmovh(reduce_2nd_1_send_bsz_dim, vector_buf_dsr);
                }
            } else {
                if (quotient_pe_id % 2 == 0) {
                    @faddh(reduce_2nd_0_send_bsz_dim, reduce_2nd_1_recv_bsz_dim, vector_buf_dsr);
                } else {
                    @faddh(reduce_2nd_1_send_bsz_dim, reduce_2nd_0_recv_bsz_dim, vector_buf_dsr);
                }
            }
        }
    } else {
        if (remainder_pe_id == root_1st_phase) {
            if (pe_id < pe_num_p_group) {
                @fmovh(reduce_2nd_1_send_bsz_dim, vector_buf_dsr);
            } else {
                if (quotient_pe_id % 2 == 0) {
                    @faddh(reduce_2nd_1_send_bsz_dim, reduce_2nd_0_recv_bsz_dim, vector_buf_dsr);
                } else {
                    @faddh(reduce_2nd_0_send_bsz_dim, reduce_2nd_1_recv_bsz_dim, vector_buf_dsr);
                }
            }
        }
    }

    // Broadcast
    if (pe_id == root_2nd_phase) {
        @mov16(bdcast_send_bsz_dim, vector_buf_dsr);
    } else {
        @mov16(vector_buf_dsd_bsz_dim, bdcast_recv_bsz_dim);
    }
}

fn all_reduce_bsz_dim_QKV_fusion(pe_id: i16, quotient_pe_id: i16, remainder_pe_id: i16, vector_buf_ptr: [*]f16) void {
    vector_buf_dsd_bsz_dim_QKV_fusion = @set_dsd_base_addr(vector_buf_dsd_bsz_dim_QKV_fusion, vector_buf_ptr);
    @load_to_dsr(vector_buf_dsr, vector_buf_dsd_bsz_dim_QKV_fusion);

    // 1st phase reduce
    if (remainder_pe_id == root_1st_phase) {
        if (root_1st_phase < pe_num_p_group - 1) {
            @faddh(vector_buf_dsd_bsz_dim_QKV_fusion, reduce_1st_0_recv_bsz_dim_QKV_fusion, vector_buf_dsr);
        }
        @faddh(vector_buf_dsd_bsz_dim_QKV_fusion, reduce_1st_1_recv_bsz_dim_QKV_fusion, vector_buf_dsr);
    } else if (remainder_pe_id > root_1st_phase) {
        if (remainder_pe_id % 2 == 0) {
            if (remainder_pe_id == pe_num_p_group - 1) {
                @fmovh(reduce_1st_0_send_bsz_dim, vector_buf_dsr);
            } else {
                @faddh(reduce_1st_0_send_bsz_dim_QKV_fusion, reduce_1st_1_recv_bsz_dim_QKV_fusion, vector_buf_dsr);
            }
        } else {
            // remainder_pe_id % 2 == 1
            if (remainder_pe_id == pe_num_p_group - 1) {
                @fmovh(reduce_1st_1_send_bsz_dim, vector_buf_dsr);
            } else {
                @faddh(reduce_1st_1_send_bsz_dim_QKV_fusion, reduce_1st_0_recv_bsz_dim_QKV_fusion, vector_buf_dsr);
            }
        }
    } else {
        // remainder_pe_id < root_1st_phase
        if (remainder_pe_id % 2 == 0) {
            if (remainder_pe_id == 0) {
                @fmovh(reduce_1st_1_send_bsz_dim, vector_buf_dsr);
            } else {
                @faddh(reduce_1st_1_send_bsz_dim_QKV_fusion, reduce_1st_0_recv_bsz_dim_QKV_fusion, vector_buf_dsr);
            }
        } else {
            // remainder_pe_id never be 0
            @faddh(reduce_1st_0_send_bsz_dim_QKV_fusion, reduce_1st_1_recv_bsz_dim_QKV_fusion, vector_buf_dsr);
        }
    }

    // 2nd phase reduce
    if (pe_id == root_2nd_phase) {
        if (root_2nd_phase < P - pe_num_p_group) {
            @faddh(vector_buf_dsd_bsz_dim_QKV_fusion, reduce_2nd_0_recv_bsz_dim_QKV_fusion, vector_buf_dsr);
        }
        @faddh(vector_buf_dsd_bsz_dim_QKV_fusion, reduce_2nd_1_recv_bsz_dim_QKV_fusion, vector_buf_dsr);
    } else if (pe_id > root_2nd_phase) {
        if (remainder_pe_id == root_1st_phase) {
            if (pe_id > P - pe_num_p_group - 1) {
                if (quotient_pe_id % 2 == 0) {
                    @fmovh(reduce_2nd_0_send_bsz_dim_QKV_fusion, vector_buf_dsr);
                } else {
                    @fmovh(reduce_2nd_1_send_bsz_dim_QKV_fusion, vector_buf_dsr);
                }
            } else {
                if (quotient_pe_id % 2 == 0) {
                    @faddh(reduce_2nd_0_send_bsz_dim_QKV_fusion, reduce_2nd_1_recv_bsz_dim_QKV_fusion, vector_buf_dsr);
                } else {
                    @faddh(reduce_2nd_1_send_bsz_dim_QKV_fusion, reduce_2nd_0_recv_bsz_dim_QKV_fusion, vector_buf_dsr);
                }
            }
        }
    } else {
        if (remainder_pe_id == root_1st_phase) {
            if (pe_id < pe_num_p_group) {
                @fmovh(reduce_2nd_1_send_bsz_dim_QKV_fusion, vector_buf_dsr);
            } else {
                if (quotient_pe_id % 2 == 0) {
                    @faddh(reduce_2nd_1_send_bsz_dim_QKV_fusion, reduce_2nd_0_recv_bsz_dim_QKV_fusion, vector_buf_dsr);
                } else {
                    @faddh(reduce_2nd_0_send_bsz_dim_QKV_fusion, reduce_2nd_1_recv_bsz_dim_QKV_fusion, vector_buf_dsr);
                }
            }
        }
    }

    // Broadcast
    if (pe_id == root_2nd_phase) {
        @mov16(bdcast_send_bsz_dim_QKV_fusion, vector_buf_dsr);
    } else {
        @mov16(vector_buf_dsd_bsz_dim_QKV_fusion, bdcast_recv_bsz_dim_QKV_fusion);
    }
}

fn all_reduce_bsz_seq_len(pe_id: i16, quotient_pe_id: i16, remainder_pe_id: i16, vector_buf_ptr: [*]f16) void {
    vector_buf_dsd_bsz_seq_len = @set_dsd_base_addr(vector_buf_dsd_bsz_seq_len, vector_buf_ptr);
    @load_to_dsr(vector_buf_dsr, vector_buf_dsd_bsz_seq_len);

    // 1st phase reduce
    if (remainder_pe_id == root_1st_phase) {
        if (root_1st_phase < pe_num_p_group - 1) {
            @faddh(vector_buf_dsd_bsz_seq_len, reduce_1st_0_recv_bsz_seq_len, vector_buf_dsr);
        }
        @faddh(vector_buf_dsd_bsz_seq_len, reduce_1st_1_recv_bsz_seq_len, vector_buf_dsr);
    } else if (remainder_pe_id > root_1st_phase) {
        if (remainder_pe_id % 2 == 0) {
            if (remainder_pe_id == pe_num_p_group - 1) {
                @fmovh(reduce_1st_0_send_bsz_seq_len, vector_buf_dsr);
            } else {
                @faddh(reduce_1st_0_send_bsz_seq_len, reduce_1st_1_recv_bsz_seq_len, vector_buf_dsr);
            }
        } else {
            // remainder_pe_id % 2 == 1
            if (remainder_pe_id == pe_num_p_group - 1) {
                @fmovh(reduce_1st_1_send_bsz_seq_len, vector_buf_dsr);
            } else {
                @faddh(reduce_1st_1_send_bsz_seq_len, reduce_1st_0_recv_bsz_seq_len, vector_buf_dsr);
            }
        }
    } else {
        // remainder_pe_id < root_1st_phase
        if (remainder_pe_id % 2 == 0) {
            if (remainder_pe_id == 0) {
                @fmovh(reduce_1st_1_send_bsz_seq_len, vector_buf_dsr);
            } else {
                @faddh(reduce_1st_1_send_bsz_seq_len, reduce_1st_0_recv_bsz_seq_len, vector_buf_dsr);
            }
        } else {
            // remainder_pe_id never be 0
            @faddh(reduce_1st_0_send_bsz_seq_len, reduce_1st_1_recv_bsz_seq_len, vector_buf_dsr);
        }
    }

    // 2nd phase reduce
    if (pe_id == root_2nd_phase) {
        if (root_2nd_phase < P - pe_num_p_group) {
            @faddh(vector_buf_dsd_bsz_seq_len, reduce_2nd_0_recv_bsz_seq_len, vector_buf_dsr);
        }
        @faddh(vector_buf_dsd_bsz_seq_len, reduce_2nd_1_recv_bsz_seq_len, vector_buf_dsr);
    } else if (pe_id > root_2nd_phase) {
        if (remainder_pe_id == root_1st_phase) {
            if (pe_id > P - pe_num_p_group - 1) {
                if (quotient_pe_id % 2 == 0) {
                    @fmovh(reduce_2nd_0_send_bsz_seq_len, vector_buf_dsr);
                } else {
                    @fmovh(reduce_2nd_1_send_bsz_seq_len, vector_buf_dsr);
                }
            } else {
                if (quotient_pe_id % 2 == 0) {
                    @faddh(reduce_2nd_0_send_bsz_seq_len, reduce_2nd_1_recv_bsz_seq_len, vector_buf_dsr);
                } else {
                    @faddh(reduce_2nd_1_send_bsz_seq_len, reduce_2nd_0_recv_bsz_seq_len, vector_buf_dsr);
                }
            }
        }
    } else {
        if (remainder_pe_id == root_1st_phase) {
            if (pe_id < pe_num_p_group) {
                @fmovh(reduce_2nd_1_send_bsz_seq_len, vector_buf_dsr);
            } else {
                if (quotient_pe_id % 2 == 0) {
                    @faddh(reduce_2nd_1_send_bsz_seq_len, reduce_2nd_0_recv_bsz_seq_len, vector_buf_dsr);
                } else {
                    @faddh(reduce_2nd_0_send_bsz_seq_len, reduce_2nd_1_recv_bsz_seq_len, vector_buf_dsr);
                }
            }
        }
    }

    // Broadcast
    if (pe_id == root_2nd_phase) {
        @mov16(bdcast_send_bsz_seq_len, vector_buf_dsr);
    } else {
        @mov16(vector_buf_dsd_bsz_seq_len, bdcast_recv_bsz_seq_len);
    }
}

fn all_reduce_bsz_ffn_dim_ZZ_fusion(pe_id: i16, quotient_pe_id: i16, remainder_pe_id: i16, vector_buf_ptr: [*]f16) void {
    vector_buf_dsd_bsz_ffn_dim_ZZ_fusion = @set_dsd_base_addr(vector_buf_dsd_bsz_ffn_dim_ZZ_fusion, vector_buf_ptr);
    @load_to_dsr(vector_buf_dsr, vector_buf_dsd_bsz_ffn_dim_ZZ_fusion);

    // 1st phase reduce
    if (remainder_pe_id == root_1st_phase) {
        if (root_1st_phase < pe_num_p_group - 1) {
            @faddh(vector_buf_dsd_bsz_ffn_dim_ZZ_fusion, reduce_1st_0_recv_bsz_ffn_dim_ZZ_fusion, vector_buf_dsr);
        }
        @faddh(vector_buf_dsd_bsz_ffn_dim_ZZ_fusion, reduce_1st_1_recv_bsz_ffn_dim_ZZ_fusion, vector_buf_dsr);
    } else if (remainder_pe_id > root_1st_phase) {
        if (remainder_pe_id % 2 == 0) {
            if (remainder_pe_id == pe_num_p_group - 1) {
                @fmovh(reduce_1st_0_send_bsz_ffn_dim_ZZ_fusion, vector_buf_dsr);
            } else {
                @faddh(reduce_1st_0_send_bsz_ffn_dim_ZZ_fusion, reduce_1st_1_recv_bsz_ffn_dim_ZZ_fusion, vector_buf_dsr);
            }
        } else {
            // remainder_pe_id % 2 == 1
            if (remainder_pe_id == pe_num_p_group - 1) {
                @fmovh(reduce_1st_1_send_bsz_ffn_dim_ZZ_fusion, vector_buf_dsr);
            } else {
                @faddh(reduce_1st_1_send_bsz_ffn_dim_ZZ_fusion, reduce_1st_0_recv_bsz_ffn_dim_ZZ_fusion, vector_buf_dsr);
            }
        }
    } else {
        // remainder_pe_id < root_1st_phase
        if (remainder_pe_id % 2 == 0) {
            if (remainder_pe_id == 0) {
                @fmovh(reduce_1st_1_send_bsz_ffn_dim_ZZ_fusion, vector_buf_dsr);
            } else {
                @faddh(reduce_1st_1_send_bsz_ffn_dim_ZZ_fusion, reduce_1st_0_recv_bsz_ffn_dim_ZZ_fusion, vector_buf_dsr);
            }
        } else {
            // remainder_pe_id never be 0
            @faddh(reduce_1st_0_send_bsz_ffn_dim_ZZ_fusion, reduce_1st_1_recv_bsz_ffn_dim_ZZ_fusion, vector_buf_dsr);
        }
    }

    // 2nd phase reduce
    if (pe_id == root_2nd_phase) {
        if (root_2nd_phase < P - pe_num_p_group) {
            @faddh(vector_buf_dsd_bsz_ffn_dim_ZZ_fusion, reduce_2nd_0_recv_bsz_ffn_dim_ZZ_fusion, vector_buf_dsr);
        }
        @faddh(vector_buf_dsd_bsz_ffn_dim_ZZ_fusion, reduce_2nd_1_recv_bsz_ffn_dim_ZZ_fusion, vector_buf_dsr);
    } else if (pe_id > root_2nd_phase) {
        if (remainder_pe_id == root_1st_phase) {
            if (pe_id > P - pe_num_p_group - 1) {
                if (quotient_pe_id % 2 == 0) {
                    @fmovh(reduce_2nd_0_send_bsz_ffn_dim_ZZ_fusion, vector_buf_dsr);
                } else {
                    @fmovh(reduce_2nd_1_send_bsz_ffn_dim_ZZ_fusion, vector_buf_dsr);
                }
            } else {
                if (quotient_pe_id % 2 == 0) {
                    @faddh(reduce_2nd_0_send_bsz_ffn_dim_ZZ_fusion, reduce_2nd_1_recv_bsz_ffn_dim_ZZ_fusion, vector_buf_dsr);
                } else {
                    @faddh(reduce_2nd_1_send_bsz_ffn_dim_ZZ_fusion, reduce_2nd_0_recv_bsz_ffn_dim_ZZ_fusion, vector_buf_dsr);
                }
            }
        }
    } else {
        if (remainder_pe_id == root_1st_phase) {
            if (pe_id < pe_num_p_group) {
                @fmovh(reduce_2nd_1_send_bsz_ffn_dim_ZZ_fusion, vector_buf_dsr);
            } else {
                if (quotient_pe_id % 2 == 0) {
                    @faddh(reduce_2nd_1_send_bsz_ffn_dim_ZZ_fusion, reduce_2nd_0_recv_bsz_ffn_dim_ZZ_fusion, vector_buf_dsr);
                } else {
                    @faddh(reduce_2nd_0_send_bsz_ffn_dim_ZZ_fusion, reduce_2nd_1_recv_bsz_ffn_dim_ZZ_fusion, vector_buf_dsr);
                }
            }
        }
    }

    // Broadcast
    if (pe_id == root_2nd_phase) {
        @mov16(bdcast_send_bsz_ffn_dim_ZZ_fusion, vector_buf_dsr);
    } else {
        @mov16(vector_buf_dsd_bsz_ffn_dim_ZZ_fusion, bdcast_recv_bsz_ffn_dim_ZZ_fusion);
    }
}

fn reconfig_allreduce_axis(axis: i16) void {
    if (axis == 0) {
        // Allreduce along X axis
        color_config.reset_routes(reduce_1st_color_0, X_1st_RD_0);
        color_config.reset_routes(reduce_1st_color_1, X_1st_RD_1);
        color_config.reset_routes(reduce_2nd_color_0, X_2nd_RD_0);
        color_config.reset_routes(reduce_2nd_color_1, X_2nd_RD_1);
        color_config.reset_routes(broadcast_color, X_BD);
    } else if (axis == 1) {
        // Allreduce along Y axis
        color_config.reset_routes(reduce_1st_color_0, Y_1st_RD_0);
        color_config.reset_routes(reduce_1st_color_1, Y_1st_RD_1);
        color_config.reset_routes(reduce_2nd_color_0, Y_2nd_RD_0);
        color_config.reset_routes(reduce_2nd_color_1, Y_2nd_RD_1);
        color_config.reset_routes(broadcast_color, Y_BD);
    } else {
        @assert(false);
    }
}

comptime {

    if (@is_arch("wse3")) {
        @initialize_queue(broadcast_send_queue_id, .{ .color = broadcast_color });
        @initialize_queue(broadcast_recv_queue_id, .{ .color = broadcast_color });

        @initialize_queue(reduce_1st_0_recv_queue_id, .{ .color = reduce_1st_color_0 });
        @initialize_queue(reduce_1st_0_send_queue_id, .{ .color = reduce_1st_color_0 });
        @initialize_queue(reduce_1st_1_recv_queue_id, .{ .color = reduce_1st_color_1 });
        @initialize_queue(reduce_1st_1_send_queue_id, .{ .color = reduce_1st_color_1 });

        @initialize_queue(reduce_2nd_0_recv_queue_id, .{ .color = reduce_2nd_color_0 });
        @initialize_queue(reduce_2nd_0_send_queue_id, .{ .color = reduce_2nd_color_0 });
        @initialize_queue(reduce_2nd_1_recv_queue_id, .{ .color = reduce_2nd_color_1 });
        @initialize_queue(reduce_2nd_1_send_queue_id, .{ .color = reduce_2nd_color_1 });
    }
}


comptime {
    // For Debugging

    // @set_local_color_config(reduce_2nd_color_0, .{ .routes = X_2nd_RD_0 });
    // @set_local_color_config(reduce_2nd_color_1, .{ .routes = X_2nd_RD_1 });

    // @set_local_color_config(reduce_2nd_color_0, .{ .routes = Y_2nd_RD_0 });
    // @set_local_color_config(reduce_2nd_color_1, .{ .routes = Y_2nd_RD_1 });
}